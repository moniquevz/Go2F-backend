# Generated by Django 3.2.7 on 2021-10-23 21:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('cities_light', '0011_auto_20211023_1248'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('base', '0004_comment_event_exclusivecontent_post'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='post',
            options={'ordering': ['-_id']},
        ),
        migrations.AddField(
            model_name='comment',
            name='detail',
            field=models.TextField(max_length=3000, null=True),
        ),
        migrations.AddField(
            model_name='post',
            name='comments',
            field=models.ManyToManyField(blank=True, related_name='post_comment', to='base.Comment'),
        ),
        migrations.RemoveField(
            model_name='comment',
            name='likes',
        ),
        migrations.AlterField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.post'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='post',
            name='description',
            field=models.TextField(max_length=3000, null=True),
        ),
        migrations.RemoveField(
            model_name='post',
            name='likes',
        ),
        migrations.AlterField(
            model_name='post',
            name='title',
            field=models.CharField(max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='post',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_image', models.ImageField(blank=True, default='/placeholder.png', null=True, upload_to='')),
                ('cover_image', models.ImageField(blank=True, default='/placeholder.png', null=True, upload_to='')),
                ('f_name', models.CharField(blank=True, max_length=25, null=True, verbose_name='First name')),
                ('l_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Last name')),
                ('website_url', models.URLField(blank=True, null=True, verbose_name='Website address')),
                ('website_hide', models.BooleanField(default=False, verbose_name='Hide this link from my public profile')),
                ('title', models.CharField(blank=True, max_length=60, null=True, verbose_name='Professional Title')),
                ('experience', models.CharField(choices=[('Entry Level', 'Entry Level (0-1 year)'), ('Junior', 'Junior (1-2 years)'), ('Mid-level', 'Mid-level (2-5 years)'), ('Senior', 'Senior (5-8 years)'), ('Director', 'Director (8+ years)')], default='Entry Level', max_length=35, verbose_name='Years of Experience as a Freelancer')),
                ('clients', models.CharField(choices=[('0-5', '0-5 clients'), ('5-20', '5-20 clients'), ('20+', '20+ clients')], default='0-5', max_length=15, verbose_name='How many clients do you manage?')),
                ('hires', models.CharField(choices=[('True', 'Yes'), ('False', 'No')], default='No', max_length=6, verbose_name='Do you hire others?')),
                ('bio', models.TextField(blank=True, max_length=3000, null=True, verbose_name='About me')),
                ('linkedin', models.URLField(blank=True, null=True, verbose_name='LinkedIn')),
                ('linkedin_hide', models.BooleanField(default=False, verbose_name='Hide this link from my public profile')),
                ('instagram', models.URLField(blank=True, null=True, verbose_name='Instagram')),
                ('insta_hide', models.BooleanField(default=False, verbose_name='Hide this link from my public profile')),
                ('twitter', models.URLField(blank=True, null=True, verbose_name='Twitter')),
                ('twitter_hide', models.BooleanField(default=False, verbose_name='Hide this link from my public profile')),
                ('github', models.URLField(blank=True, null=True, verbose_name='Github')),
                ('github_hide', models.BooleanField(default=False, verbose_name='Hide this link from my public profile')),
                ('dribble', models.URLField(blank=True, null=True, verbose_name='Dribble')),
                ('dribble_hide', models.BooleanField(default=False, verbose_name='Hide this link from my public profile')),
                ('behance', models.URLField(blank=True, null=True, verbose_name='Behance')),
                ('behance_hide', models.BooleanField(default=False, verbose_name='Hide this link from my public profile')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cities_light.city')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cities_light.country')),
                ('followers', models.ManyToManyField(blank=True, related_name='following', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PostLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FollowerRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.profile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CommentLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='likes',
            field=models.ManyToManyField(blank=True, related_name='comment_user', through='base.CommentLike', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='post',
            name='likes',
            field=models.ManyToManyField(blank=True, related_name='post_user', through='base.PostLike', to=settings.AUTH_USER_MODEL),
        ),
    ]
